(function(M){"use strict";const P=e=>typeof e.prev=="function"?e.prev:P(e.prev);var k=(e,t,n)=>{const r=t[e][n];return r===void 0?t[n]:P(r)};class T{constructor(t,n,r){this.data={id:t,func:(i,...c)=>r(i,typeof this.prev=="function"?this.prev:this.prev.data.func,c)},this.prev=n}}var O=(e,t,n,r)=>{const i=e[r][t];if(i.data.id===n){if(typeof i.prev=="function"){e[t]=i.prev,delete e[r][t];return}e[r][t]=i.prev,e[t]=i.prev.data.func;return}const c=s=>s&&typeof s.prev=="object"?(s.data=s.prev.data,s.prev=s.prev.prev,c(s.prev)):!0,h=s=>{if(!s)throw new Error("could not find unpatch");return typeof s.prev=="object"&&s.data.id!==n?h(s.prev):c(s)};let d=Object.assign({},i);h(d),e[r][t]=d,e[t]=d.data.func},b=function(e,t,n,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof t=="function"?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(e,n):i?i.value=n:t.set(e,n),n},o=function(e,t,n,r){if(n==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n==="m"?r:n==="a"?r.call(e):r?r.value:t.get(e)},m,a,f,g;class A{constructor(t="simian"){m.add(this),a.set(this,void 0),f.set(this,void 0),b(this,a,Symbol(t),"f"),b(this,f,new Set,"f"),this.after=o(this,m,"m",g).call(this,"AFTER"),this.before=o(this,m,"m",g).call(this,"BEFORE"),this.instead=o(this,m,"m",g).call(this,"INSTEAD")}cleanupAll(){for(const t of o(this,f,"f")){for(const n in t[o(this,a,"f")]){const r=k(o(this,a,"f"),t,n);t[n]=r,t[o(this,a,"f")][n]=void 0}t[o(this,a,"f")]=void 0,delete t[o(this,a,"f")]}o(this,f,"f").clear()}}a=new WeakMap,f=new WeakMap,m=new WeakSet,g=function(t){return(n,r,i)=>{const c=r[n];if(typeof c!="function")throw new Error(`${n} is not a function on ${r}`);const h=Symbol();r[o(this,a,"f")]===void 0&&(r[o(this,a,"f")]={});let d;switch(t){case"AFTER":d=(l,w,u)=>{let p=w.apply(l,u);const y=i.apply(l,[u,p]);return typeof y!="undefined"&&(p=y),p};break;case"BEFORE":d=(l,w,u)=>{var p;let y=u;const B=(p=i.apply(l,[u]))!==null&&p!==void 0?p:u;return Array.isArray(B)&&(y=B),w.apply(l,y)};break;case"INSTEAD":d=(l,w,u)=>i.apply(l,[u,w.bind(l)]);break}let s=r[o(this,a,"f")][n];return s===void 0?s=new T(h,c,d):s=new T(h,s,d),r[o(this,a,"f")][n]=s,r[n]=function(){return s.data.func(this,...arguments)},Object.assign(r[n],c),o(this,f,"f").add(r),()=>O(r,n,h,o(this,a,"f"))}};const v=cumcord.modules.webpackModules;M.React.useState,v.findByDisplayName("Switch"),v.findByDisplayName("Text"),v.findByDisplayName("Header"),v.findByDisplayName("SwitchItem");const _=cumcord.modules.webpackModules;_.findByDisplayName("FormTitle"),_.findByDisplayName("FormDivider"),_.findByDisplayName("FormSection");const C=cumcord.modules.webpackModules.findByProps("getElementFromMessageId").getElementFromMessageId,G=cumcord.modules.webpack.find(e=>e.dispatch&&!e.getCurrentUser),R=Object.getPrototypeOf(cumcord.modules.webpackModules.findByProps("getChannel")).getChannel,$=Object.getPrototypeOf(cumcord.modules.webpackModules.findByProps("getGuild")).getGuild;cumcord.modules.webpackModules.findByDisplayName("SettingsView");let H=new A,E=[],S,D,F;function L(){for(let e of E)try{document.getElementById(e.id).classList.contains("deleted-message")||document.getElementById(e.id).classList.add("deleted-message")}catch(t){}}var x={onLoad(){window.betterMessageDeletion_enableToasts=!1,F=cumcord.patcher.injectCSS(".deleted-message{background-color: rgba(240, 71, 71, 0.1);}"),D=setInterval(L,300),S=H.instead("dispatch",G,(e,t)=>{if(e[0].type==="MESSAGE_DELETE"){console.log(e);try{var n={deletedHtmlElement:C(document,e[0].id)};if(n.deletedText=n.deletedHtmlElement.innerText.split(`
`)[3],n.id="chat-messages-"+e[0].id,n.deletedHtmlElement,console.log("[messagedeletion] New Deleted Message: "+n.deletedText),E.indexOf(n)==-1&&E.push(n),window.betterMessageDeletion_enableToasts){var r=$(R(e[0].channelId).guild_id).name;cumcord.ui.toasts.showToast({title:`New deleted message in ${r}!`,duration:3e3})}console.log(E);return}catch(i){console.log("[messagedeletion] Failed to get deleted message!"),console.error(i)}}return t(...e)})},onUnload(){F(),S(),clearInterval(D)}};return x})(cumcord.modules.common);
